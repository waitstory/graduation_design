C51 COMPILER V9.56.0.0   MAIN                                                              06/08/2018 14:37:01 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.l
                    -st) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "LCD1602.h"
   2          #include "EEPROM.h"
   3          #define Judge() ((RxStr[0] == 'S') && (RxStr[1] == 'Y')&& (RxStr[4] == 'H'))
   4          
   5          sbit M0 = P2^7;    //SX1278无线UART模块工作方式选择引脚
   6          sbit M1 = P2^6; 
   7          
   8          sbit BEEP = P1^3;
   9          sbit LED = P1^4;
  10          sbit KEY1 = P2^2;
  11          sbit KEY2 = P2^1;
  12          sbit KEY3 = P2^0;
  13          
  14          bit flag = 0;       //数据接收完成
  15          bit flagRec = 0;    //开始接收数据标志
  16          bit flag_read = 0;  //将总车位数写入单片机内部EEPROM中标志
  17          uchar dat =0;       //数据保存位
  18          uchar RxStr[5]={0}; //接收数据缓冲区
  19          uchar All = 99;     //总车位数
  20          uchar Count = 0;    //已占用车位
  21          uchar state = 0;    //按键选择模式
  22          bit flag250ms = 0;  //定时250ms标志位
  23          
  24          void Write_eeprom();    //将数据写入到单片机内部EEPROM中
  25          void Read_eeprom();     //从单片机内部EEPROM中读取数据函数
  26          void InitEEPROM();     //上电初始化保存总车位数到单片机内部EEPROM中
  27          void InitUART(uint baud);  //串口初始化函数
  28          void ConfigTimer0();    //配置定时器0函数
  29          void Delay_ms(uint x);  //毫秒延时函数
  30          void InitDisplay();     //初始化显示LCD1602函数
  31          void ConvertData();     //将接收的数据转换成整数
  32          void KeyScan();         //按键扫描函数
  33          void Show();            //显示数据到LCD1602上
  34          
  35          
  36          void main()
  37          {
  38   1          M0 = 0; //SX1278无线UART模块配置为模式0
  39   1          M1 = 0;
  40   1          
  41   1          InitLcd1602();   //LCD1602液晶屏初始化
  42   1          InitEEPROM();   //初始化单片机内部EEPROM数据
  43   1          InitDisplay();   //初始化LCD1602显示内容
  44   1          InitUART(9600);  //串口初始化
  45   1          ConfigTimer0();  //配置定时器T0
  46   1      //    P2 = 0xF7;       //P2.3 置 0，即 KeyOut1 输出低电平
  47   1              
  48   1          while(1)
  49   1          {  
  50   2              if(flag == 1)
  51   2              {
  52   3                  flag = 0;
  53   3                  if(Judge())
  54   3                  {
C51 COMPILER V9.56.0.0   MAIN                                                              06/08/2018 14:37:01 PAGE 2   

  55   4      //                LcdShowStr(10,0,RxStr);   
  56   4                      ConvertData();       
  57   4                  }
  58   3              } 
  59   2              Show();
  60   2              if((All-Count) == 5)
  61   2              {
  62   3                  BEEP = 0;
  63   3                  LED = 0;
  64   3      //            Delay_ms(30);
  65   3      //            BEEP = 1;
  66   3      //           Delay_ms(30);
  67   3              }
  68   2              else
  69   2              {
  70   3                   BEEP = 1; 
  71   3                   LED = 1;
  72   3              }
  73   2              KeyScan();    
  74   2          }
  75   1      }
  76          
  77          /* 配置并启动T0,定时50ms*/
  78          void ConfigTimer0()
  79          {
  80   1          TMOD &= 0xF0; //清零 T0 的控制位
  81   1          TMOD |= 0x01; //配置 T0 为模式 1
  82   1          TH0 = 0x4C; //加载T0重载值
  83   1          TL0 = 0x00;
  84   1          ET0 = 1; //使能 T0 中断
  85   1          TR0 = 1; //启动 T0
  86   1      }
  87          
  88          /* 串口配置函数，baud-通信波特率 */
  89          void InitUART(uint baud)
  90          {
  91   1          EA = 1;        //使能中断总开关
  92   1          SCON  = 0x50;  //配置串口为模式1
  93   1          TMOD &= 0x0F;  //清零T1的控制位
  94   1          TMOD |= 0x20;  //配置T1为模式2
  95   1          TH1 = 256 - (11059200/12/32)/baud;  //计算T1重载值
  96   1          TL1 = TH1;     //初值等于重载值
  97   1          ET1 = 0;       //禁止T1中断
  98   1          ES  = 1;       //使能串口中断
  99   1          TR1 = 1;       //启动T1计数
 100   1      }
 101          
 102          /*把数据保存到单片机内部eeprom中*/
 103          void Write_eeprom()
 104          {
 105   1              SectorErase(0x2000);      
 106   1              byte_write(0x2000,99);
 107   1              byte_write(0x2060, flag_read);  
 108   1      }
 109          
 110          /*把数据从单片机内部eeprom中读出来*/
 111          void Read_eeprom()
 112          {
 113   1              All = byte_read(0x2000);
 114   1              flag_read  = byte_read(0x2060);
 115   1      }
 116          
C51 COMPILER V9.56.0.0   MAIN                                                              06/08/2018 14:37:01 PAGE 3   

 117          /*开机自检eeprom初始化*/
 118          void InitEEPROM() 
 119          {
 120   1              Read_eeprom();              //先读
 121   1         
 122   1              if(flag_read != 1)              //新的单片机初始单片机内问EEPROM
 123   1              {
 124   2                      flag_read = 1;  
 125   2                      Write_eeprom();     //保存数据 
 126   2              }       
 127   1          
 128   1      }
 129          
 130          void InitDisplay()
 131          {
 132   1              
 133   1          LcdShowStr(2,0,"Welcome USE!");    
 134   1          LcdShowStr(1,1,"SYSTEM Running!");
 135   1          Delay_ms(1500);  
 136   1          LcdFullClear();     //清除LCD1602全屏显示内容
 137   1      //      LcdShowStr(0,0,"All:");
 138   1      //    LcdShowChr(4,0,All/10+'0');   
 139   1      //    LcdShowChr(5,0,All%10+'0');
 140   1      //      LcdShowStr(0,1,"Sur:");
 141   1      //    LcdShowChr(4,1,(All-Count)/10+'0');     //剩余车位
 142   1      //    LcdShowChr(5,1,(All-Count)%10+'0');
 143   1      //    LcdShowStr(8,1,"Cur:");
 144   1      //    LcdShowChr(12,1,Count/10+'0');     //占用车位
 145   1      //    LcdShowChr(13,1,Count%10+'0');
 146   1              
 147   1      }
 148          
 149          void ConvertData()
 150          {    
 151   1          Count = (RxStr[2]-'0')*10 + (RxStr[3]-'0');
 152   1      //    All = byte_read(0x2000);
 153   1      //    LcdShowStr(0,0,"All:");
 154   1      //    LcdShowChr(4,0,All/10+'0');   
 155   1      //    LcdShowChr(5,0,All%10+'0');
 156   1      //      LcdShowStr(0,1,"Sur:");
 157   1      //    LcdShowChr(4,1,(All-Count)/10+'0');     //剩余车位
 158   1      //    LcdShowChr(5,1,(All-Count)%10+'0');
 159   1      //    LcdShowStr(8,1,"Cur:");
 160   1      //    LcdShowChr(12,1,Count/10+'0');     //剩余车位
 161   1      //    LcdShowChr(13,1,Count%10+'0');
 162   1      }
 163          
 164          /*按键扫描函数*/
 165          void KeyScan()
 166          {
 167   1          if(KEY1 == 0)
 168   1          {
 169   2              Delay_ms(5);
 170   2          
 171   2              if(KEY1 == 0)
 172   2              {   
 173   3                  Show();
 174   3                  state = (state+1)%2;  
 175   3                  while(!KEY1);  
 176   3              }   
 177   2                   
 178   2          }
C51 COMPILER V9.56.0.0   MAIN                                                              06/08/2018 14:37:01 PAGE 4   

 179   1      
 180   1          if(KEY2 == 0)        //总车位数加
 181   1          {
 182   2              Delay_ms(5);     //消抖
 183   2          
 184   2              if(KEY2 == 0)
 185   2              {
 186   3                  if(state == 1)
 187   3                  {    
 188   4                      Show();
 189   4                      if(All < 99)
 190   4                      {
 191   5                          All = All+ 1;
 192   5                          SectorErase(0x2000);         
 193   5                          byte_write(0x2000,All);
 194   5                      }
 195   4                  }
 196   3                  while(!KEY2);
 197   3              }      
 198   2          }
 199   1        
 200   1        
 201   1          if(KEY3 == 0)     //总车位数减
 202   1          {
 203   2              Delay_ms(5);  //消抖
 204   2          
 205   2              if(KEY3 == 0)
 206   2              {   
 207   3                  Show();
 208   3                  if(state == 1)
 209   3                  {
 210   4                      if(All > Count+1) 
 211   4                      {
 212   5                          All = All - 1;
 213   5                          SectorErase(0x2000);         
 214   5                          byte_write(0x2000,All);
 215   5                      }
 216   4                  }
 217   3                  while(!KEY3);
 218   3              }    
 219   2          }
 220   1         
 221   1      }
 222          
 223          /*总车位数通过按键调整，显示在LCD1602上*/
 224              void Show()
 225          {
 226   1          if(state == 0)
 227   1          {   
 228   2              LcdShowStr(4,0,"All:");
 229   2              LcdShowChr(8,0,All/10+'0');   
 230   2              LcdShowChr(9,0,All%10+'0');
 231   2              LcdShowStr(0,1,"Sur:");
 232   2              LcdShowChr(4,1,(All-Count)/10+'0');     //剩余车位
 233   2              LcdShowChr(5,1,(All-Count)%10+'0');
 234   2              LcdShowStr(8,1,"Cur:");
 235   2              LcdShowChr(12,1,Count/10+'0');     //已占车位
 236   2              LcdShowChr(13,1,Count%10+'0');  
 237   2      //        LcdShowStr(10,0,RxStr);
 238   2          }
 239   1          else
 240   1          {   
C51 COMPILER V9.56.0.0   MAIN                                                              06/08/2018 14:37:01 PAGE 5   

 241   2              LcdShowStr(0,0,"    Adjust   ");
 242   2              LcdShowStr(0,1,"All:");
 243   2              LcdShowStr(6,1,"          ");
 244   2      
 245   2              if(flag250ms == 1)
 246   2              {
 247   3                  LcdShowChr(4,1,All/10+'0');   
 248   3                  LcdShowChr(5,1,All%10+'0');     
 249   3              } 
 250   2              else
 251   2              {
 252   3                  LcdShowStr(4,1,"  ");
 253   3                  LcdShowStr(5,1,"  ");
 254   3              }        
 255   2          }
 256   1      }
 257          
 258          /*延时函数，延时单位为毫秒*/
 259          void Delay_ms(uint x)
 260          {
 261   1         uint i,j;
 262   1       
 263   1         for(i=x;i>0;i--)
 264   1            for(j=110;j>0;j--);
 265   1      }
 266          
 267          /* UART中断服务函数 */
 268          void InterruptUART() interrupt 4
 269          {
 270   1          static int i = 0;    
 271   1      
 272   1          if(RI)
 273   1          {
 274   2              RI = 0;
 275   2              dat = SBUF;
 276   2              if((dat == 'S') && (i == 0))
 277   2              {
 278   3                  RxStr[i] = dat;
 279   3                  flagRec = 1;   //开始接收数据
 280   3              }
 281   2              else
 282   2              {
 283   3                  if(flagRec == 1)
 284   3                  {
 285   4                      i++;
 286   4                      RxStr[i]=dat;
 287   4                      if(i >= 4)
 288   4                      {
 289   5                          i = 0; 
 290   5                          flagRec = 0;   //停止接收数据
 291   5                          flag = 1;      //数据接收完成
 292   5                      }
 293   4                  }
 294   3              }
 295   2              SBUF = dat;  //将接收到的数据通过串口发送到电脑打印出来显示，方便调试
 296   2          }  
 297   1      }
 298          
 299          void InterruptTimer0() interrupt 1
 300          {
 301   1          static unsigned char tmr250ms = 0;
 302   1      
C51 COMPILER V9.56.0.0   MAIN                                                              06/08/2018 14:37:01 PAGE 6   

 303   1          TH0 = 0x4C; //重新加载T0重载值
 304   1          TL0 = 0x00;
 305   1          
 306   1          tmr250ms++;
 307   1      
 308   1          if (tmr250ms%5==0)
 309   1          {
 310   2              flag250ms = !flag250ms;
 311   2          }
 312   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    799    ----
   CONSTANT SIZE    =     72    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
